{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-post-2021-06-02-mdx-04522693818a5613a7e5.js","mappings":"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","sources":["webpack://blog/./blog/post-2021-06-02.mdx","webpack://blog/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    span: \"span\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"根据 useState 的定义，写出基础框架\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">initVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> _val <span class=\\\"token operator\\\">=</span> initVal<span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> state <span class=\\\"token operator\\\">=</span> _val<span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">setState</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">newVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    _val <span class=\\\"token operator\\\">=</span> newVal<span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>state<span class=\\\"token punctuation\\\">,</span> setState<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>count<span class=\\\"token punctuation\\\">,</span> setCount<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>count<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token function\\\">setCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>count<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"输出:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">1\\r\\n1</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"重新暴露内部变量\"), \"\\n\", React.createElement(_components.p, null, \"在上面的代码中，\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">setCount</code>\"\n    }\n  }), \" 修改了内部变量的值，我们把\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">state</code>\"\n    }\n  }), \"变成一个 getter 函数，重新把内部变量暴露出来。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">initVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> _val <span class=\\\"token operator\\\">=</span> initVal<span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">state</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> _val<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 最容易的一种方式</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">setState</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">newVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    _val <span class=\\\"token operator\\\">=</span> newVal<span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>state<span class=\\\"token punctuation\\\">,</span> setState<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>count<span class=\\\"token punctuation\\\">,</span> setCount<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">count</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// updated</span>\\r\\n<span class=\\\"token function\\\">setCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">count</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// updated</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"输出:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">1\\r\\n2</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"使用立即执行函数引入 React 模块\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> React <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">initVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">let</span> _val <span class=\\\"token operator\\\">=</span> initVal<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">state</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> _val<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">setState</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">newVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n      _val <span class=\\\"token operator\\\">=</span> newVal<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>state<span class=\\\"token punctuation\\\">,</span> setState<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> useState <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>count<span class=\\\"token punctuation\\\">,</span> setCount<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">count</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token function\\\">setCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">count</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"输出:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">1\\r\\n2</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"定义一个\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">HelloWorld</code>\"\n    }\n  }), \"组件来使用\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useState</code>\"\n    }\n  }), \":\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">HelloWorld</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>count<span class=\\\"token punctuation\\\">,</span> setCount<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token function-variable function\\\">render</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>count<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">//模拟JSX</span>\\r\\n    <span class=\\\"token function-variable function\\\">click</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setCount</span><span class=\\\"token punctuation\\\">(</span>count <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 模拟点击</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"教会 React 如何渲染一个组件\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> React <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">initVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">let</span> _val <span class=\\\"token operator\\\">=</span> initVal<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">state</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> _val<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">setState</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">newVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n      _val <span class=\\\"token operator\\\">=</span> newVal<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>state<span class=\\\"token punctuation\\\">,</span> setState<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n  <span class=\\\"token comment\\\">// ===新加一个render函数</span>\\r\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">Component</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">C</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">Component</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token constant\\\">C</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token constant\\\">C</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n  <span class=\\\"token comment\\\">// ===</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> useState<span class=\\\"token punctuation\\\">,</span> render <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"重新组织一下目前的代码，并使用 React.render 方法\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> React <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> _val<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 使_val变成React的私有变量</span>\\r\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">initVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> state <span class=\\\"token operator\\\">=</span> _val <span class=\\\"token operator\\\">||</span> initVal<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 通过useState来访问_val</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">setState</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">newVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n      _val <span class=\\\"token operator\\\">=</span> newVal<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>state<span class=\\\"token punctuation\\\">,</span> setState<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">Component</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">C</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">Component</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token constant\\\">C</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token constant\\\">C</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> useState<span class=\\\"token punctuation\\\">,</span> render <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">HelloWorld</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>count<span class=\\\"token punctuation\\\">,</span> setCount<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token function-variable function\\\">render</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>count<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\r\\n    <span class=\\\"token function-variable function\\\">click</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setCount</span><span class=\\\"token punctuation\\\">(</span>count <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">var</span> App <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>HelloWorld<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nApp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token keyword\\\">var</span> App <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>HelloWorld<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nApp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token keyword\\\">var</span> App <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>HelloWorld<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nApp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token keyword\\\">var</span> App <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>HelloWorld<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nApp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token keyword\\\">var</span> App <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>HelloWorld<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"输出:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">1\\r\\n2\\r\\n3\\r\\n4\\r\\n5</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"到目前为止，看上去已经比较完美了。\"), \"\\n\", React.createElement(_components.h2, null, \"组件中使用多个\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">state</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">HelloWorld</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>count<span class=\\\"token punctuation\\\">,</span> setCount<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>text<span class=\\\"token punctuation\\\">,</span> setText<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"apple\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//增加一个state</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token function-variable function\\\">render</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> count<span class=\\\"token punctuation\\\">,</span> text <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\r\\n    <span class=\\\"token function-variable function\\\">click</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setCount</span><span class=\\\"token punctuation\\\">(</span>count <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\r\\n    <span class=\\\"token function-variable function\\\">type</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">word</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setText</span><span class=\\\"token punctuation\\\">(</span>word<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 增加一个设置方法</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">var</span> App <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>HelloWorld<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nApp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token keyword\\\">var</span> App <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>HelloWorld<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nApp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">type</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"banana\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token keyword\\\">var</span> App <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>HelloWorld<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"输出:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">{count: 1, text: \\\"apple\\\"}\\r\\n{count：2, text： 2}\\r\\n{count: \\\"apple\\\", text: \\\"apple\\\"}</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"这是由于我们从头到尾都只有一个变量\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">_val</code>\"\n    }\n  }), \"，接下来我们来解决这个问题。\"), \"\\n\", React.createElement(_components.h2, null, \"引入\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">hooks</code>\"\n    }\n  }), \"数组和当前索引\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">idx</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> React <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> hooks <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// updated</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> idx <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// updated</span>\\r\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">initVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> state <span class=\\\"token operator\\\">=</span> hooks<span class=\\\"token punctuation\\\">[</span>idx<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">||</span> initVal<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//_val被hooks[idx]替代</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">setState</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">newVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n      hooks<span class=\\\"token punctuation\\\">[</span>idx<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> newVal<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//_val被hooks[idx]替代</span>\\r\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    idx<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 每调用一次useState,idx自增1</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>state<span class=\\\"token punctuation\\\">,</span> setState<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">Component</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">C</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">Component</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token constant\\\">C</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token constant\\\">C</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> useState<span class=\\\"token punctuation\\\">,</span> render <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"输出：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">{count: 1, text: \\\"apple\\\"}\\r\\n{count：2, text： \\\"apple\\\"}\\r\\n{count: \\\"pear\\\", text: \\\"apple\\\"}</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"看输出还是没有达到我们预期的效果。\"), \"\\n\", React.createElement(_components.h2, null, \"重置\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">idx</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> React <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> hooks <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> idx <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">initVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> state <span class=\\\"token operator\\\">=</span> hooks<span class=\\\"token punctuation\\\">[</span>idx<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">||</span> initVal<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">setState</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">newVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n      hooks<span class=\\\"token punctuation\\\">[</span>idx<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> newVal<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    idx<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>state<span class=\\\"token punctuation\\\">,</span> setState<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">Component</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    idx <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//每次render的时候重置idx</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">C</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">Component</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token constant\\\">C</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token constant\\\">C</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> useState<span class=\\\"token punctuation\\\">,</span> render <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"输出：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">{count: 1, text: \\\"apple\\\"}\\r\\n{count: 1, text: \\\"apple\\\"}\\r\\n{count: 1, text: \\\"apple\\\"}</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"这还是不对，setState 是在 React.render 之后执行，那个时候\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">idx</code>\"\n    }\n  }), \"已经被重置为 0。\"), \"\\n\", React.createElement(_components.h2, null, \"锁住\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">idx</code>\"\n    }\n  }), \"的值\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> React <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> hooks <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> idx <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">initVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> state <span class=\\\"token operator\\\">=</span> hooks<span class=\\\"token punctuation\\\">[</span>idx<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">||</span> initVal<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> _idx <span class=\\\"token operator\\\">=</span> idx<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// updated</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">setState</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">newVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n      hooks<span class=\\\"token punctuation\\\">[</span>_idx<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> newVal<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    idx<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>state<span class=\\\"token punctuation\\\">,</span> setState<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">Component</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    idx <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">C</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">Component</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token constant\\\">C</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token constant\\\">C</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> useState<span class=\\\"token punctuation\\\">,</span> render <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"输出：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">{count: 1, text: \\\"apple\\\"}\\r\\n{count: 2, text: \\\"apple\\\"}\\r\\n{count: 2, text: \\\"pear\\\"}</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"最终使用不到 50 行代码完成了 React.useState()和 demo\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> React <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> hooks <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">let</span> idx <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">initVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> state <span class=\\\"token operator\\\">=</span> hooks<span class=\\\"token punctuation\\\">[</span>idx<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">||</span> initVal<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> _idx <span class=\\\"token operator\\\">=</span> idx<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// updated</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">setState</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">newVal</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n      hooks<span class=\\\"token punctuation\\\">[</span>_idx<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> newVal<span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    idx<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>state<span class=\\\"token punctuation\\\">,</span> setState<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">Component</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    idx <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">C</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">Component</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token constant\\\">C</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token constant\\\">C</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> useState<span class=\\\"token punctuation\\\">,</span> render <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">HelloWorld</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>count<span class=\\\"token punctuation\\\">,</span> setCount<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>text<span class=\\\"token punctuation\\\">,</span> setText<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"apple\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token function-variable function\\\">render</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> count<span class=\\\"token punctuation\\\">,</span> text <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\r\\n    <span class=\\\"token function-variable function\\\">click</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setCount</span><span class=\\\"token punctuation\\\">(</span>count <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\r\\n    <span class=\\\"token function-variable function\\\">type</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">word</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setText</span><span class=\\\"token punctuation\\\">(</span>word<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">var</span> App <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>HelloWorld<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nApp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token keyword\\\">var</span> App <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>HelloWorld<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nApp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">type</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"banana\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token keyword\\\">var</span> App <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>HelloWorld<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"输出：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">{count: 1, text: \\\"apple\\\"}\\r\\n{count: 2, text: \\\"apple\\\"}\\r\\n{count: 2, text: \\\"pear\\\"}</code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"D:/github/blog/blog/post-2021-06-02.mdx\";\nimport * as React from \"react\";\nimport {graphql} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/layout\";\nimport Seo from \"../../components/seo\";\nconst BlogPost = ({data, children}) => {\n  const image = getImage(data.mdx.frontmatter.hero_image);\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, children);\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","span","p","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","BlogPost","_ref","data","children","getImage","mdx","frontmatter","hero_image","Layout","pageTitle","title","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}