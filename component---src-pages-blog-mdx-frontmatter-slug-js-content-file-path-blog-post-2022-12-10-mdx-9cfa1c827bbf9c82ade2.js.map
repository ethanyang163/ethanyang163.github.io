{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-post-2022-12-10-mdx-9cfa1c827bbf9c82ade2.js","mappings":"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","sources":["webpack://blog/./blog/post-2022-12-10.mdx","webpack://blog/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    h2: \"h2\",\n    blockquote: \"blockquote\",\n    p: \"p\",\n    a: \"a\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.img, {\n    src: \"https://redd.one/static/e9c12b1d95e9e01c05f752667efce5b3/426b8/thumbnail.jpg\",\n    alt: \"mp3\"\n  }), \"\\n\", React.createElement(_components.h2, null, \"介绍\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"本文基于最新的 \", React.createElement(\"strong\", null, \"webpack v5\"), \" 实现\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://webpack.js.org/\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"webpack\"), \" 正在为越来越多的现代前端工具（Create React App, NextJS, Gatsby）提供基础支撑。无论你使用哪一种工具，理解 如何自定义 webpack 配置都将使你受益。尽管 webpack 配置有时候并不是那么容易。\"), \"\\n\", React.createElement(_components.p, null, \"今天我要讨论的是：如何实现一个自定义的 webpack loader。这个主题没有太多的文档可供参考。本文也是基于常用的 loaders 进行逆向工程的结果。\"), \"\\n\", React.createElement(_components.h2, null, \"loader 基础\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://webpack.js.org/concepts/loaders/\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"webpack loader\"), \" 是转换导入模块源代码的函数。\\r\\n例如：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> styles <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">cssLoader</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"./styles.css\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"webpack 能够将 TypeScript 编译为 JavaScript、转换 SASS 为 CSS、将 JSX 转化为\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">React.createElement</code>\"\n    }\n  }), \"调用。其实这都是作为 webpack 核心的 loader 的作用。另一方面，webpack 创建了一个源码转化链来确保特定的 loader 在适当的时机被执行。\"), \"\\n\", React.createElement(_components.p, null, \"loader 在 webpack 中的配置如下：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// webpack.config.js</span>\\r\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token literal-property property\\\">module</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token literal-property property\\\">rules</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\r\\n      <span class=\\\"token punctuation\\\">{</span>\\r\\n        <span class=\\\"token comment\\\">// Capture all \\\"*.js\\\" imports,</span>\\r\\n        <span class=\\\"token literal-property property\\\">test</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token regex\\\"><span class=\\\"token regex-delimiter\\\">/</span><span class=\\\"token regex-source language-regex\\\">\\\\.js$</span><span class=\\\"token regex-delimiter\\\">/</span></span><span class=\\\"token punctuation\\\">,</span>\\r\\n        <span class=\\\"token comment\\\">// ...and transform them via \\\"babel-loader\\\".</span>\\r\\n        <span class=\\\"token literal-property property\\\">use</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'babel-loader'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\r\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n      <span class=\\\"token punctuation\\\">{</span>\\r\\n        <span class=\\\"token comment\\\">// Capture all the \\\"*.css\\\" imports,</span>\\r\\n        <span class=\\\"token literal-property property\\\">test</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token regex\\\"><span class=\\\"token regex-delimiter\\\">/</span><span class=\\\"token regex-source language-regex\\\">\\\\.css$</span><span class=\\\"token regex-delimiter\\\">/</span></span>\\r\\n        <span class=\\\"token comment\\\">// ...and transform them via \\\"css-loader\\\".</span>\\r\\n        <span class=\\\"token literal-property property\\\">use</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'css-loader'</span><span class=\\\"token punctuation\\\">]</span>\\r\\n      <span class=\\\"token punctuation\\\">}</span>\\r\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"在上面的配置中，所有导入的\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">*.js</code>\"\n    }\n  }), \"文件被交给\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">babel-loader</code>\"\n    }\n  }), \"处理，所有的\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">*.css</code>\"\n    }\n  }), \"文件被交给\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">css-loader</code>\"\n    }\n  }), \"处理。对于同一种类型的文件，你可以提供多个 loader 来处理，loader 的应用顺序是从右至左。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token literal-property property\\\">test</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token regex\\\"><span class=\\\"token regex-delimiter\\\">/</span><span class=\\\"token regex-source language-regex\\\">\\\\.ext$</span><span class=\\\"token regex-delimiter\\\">/</span></span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token literal-property property\\\">use</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"third-loader\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"second-loader\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"first-loader\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"当你把 loader 看成函数，源代码作为参数时，从右至左更加符合直觉。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token function\\\">third</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">second</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">first</span><span class=\\\"token punctuation\\\">(</span>source<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"loader 的一些限制\"), \"\\n\", React.createElement(_components.p, null, \"loader 用于转换代码。与 plugin 不同的是，loader 不会影响编译流程，只是在编译的过程中转换导入的模块代码。\"), \"\\n\", React.createElement(_components.p, null, \"一般来说，除了转换代码以外的事情都可以通过 \", React.createElement(_components.a, {\n    href: \"https://webpack.js.org/concepts/#plugins\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"plugin\"), \" 来完成。plugin 不应该对源代码做任改变，这也是 plugin 区分于 loader 最主要的特征。\"), \"\\n\", React.createElement(_components.p, null, \"loader 有以下一些使用场景：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"支持特定格式的文件导入（例如：\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">*.graphql</code>\"\n    }\n  }), \"或者\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">*.prisma</code>\"\n    }\n  }), \"）\"), \"\\n\", React.createElement(_components.li, null, \"为转换后的文件添加元数据（例如在\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">*.mdx</code>\"\n    }\n  }), \"文件中插入前言）\"), \"\\n\", React.createElement(_components.li, null, \"修改导入的文件（例如 CSS 样式自动添加前缀）\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"实现一个自定义 loader\"), \"\\n\", React.createElement(_components.p, null, \"在本文中我们准备实现一个 MP3 loader，这个 loader 可以转换导入的\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">*.mp3</code>\"\n    }\n  }), \"文件为\", React.createElement(_components.a, {\n    href: \"https://reactjs.org/\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"React\"), \"播放组件。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> AudioPlayer <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./audio.mp3'</span>\\r\\n\\r\\n<span class=\\\"token keyword\\\">function</span> MyComponent <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\r\\n    <span class=\\\"token operator\\\">&lt;</span>AudioPlayer <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\r\\n  <span class=\\\"token punctuation\\\">)</span>\\r\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"函数声明\"), \"\\n\", React.createElement(_components.p, null, \"loader 接收源代码作为输入，转化后的源代码作为输出。我们创建\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">mp3-loader.js</code>\"\n    }\n  }), \"文件并声明一个函数：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/mp3-loader.js</span>\\r\\nmodule<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">exports</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">source</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">return</span> source<span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"目前为止， 你的 loader 会原样输出导入的 MP3 文件。\"), \"\\n\", React.createElement(_components.p, null, \"我们使用\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">&lt;audio></code>\"\n    }\n  }), \"标签来播放导入的音频文件。我们需要知道 MP3 文件在最终生成目录中的路径。将路径提供给\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">&lt;audio></code>\"\n    }\n  }), \"标签的\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">src</code>\"\n    }\n  }), \"属性使用。\"), \"\\n\", React.createElement(_components.p, null, \"在 loader 的上下文环境中，可以通过\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">this.resourcePath</code>\"\n    }\n  }), \"属性来获得导入文件的绝对路径。\"), \"\\n\", React.createElement(_components.p, null, \"例如，对于下面的导入：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> AudioPlayer <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./audio.mp3\\\"</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">this.resourcePath</code>\"\n    }\n  }), \"会包含\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">./audio.mp3</code>\"\n    }\n  }), \"文件的绝对路径。知道了这些，我们来生成一个同名的 MP3 文件。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/mp3-loader.js</span>\\r\\n<span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"path\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nmodule<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">exports</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">source</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token comment\\\">// webpack exposes an absolute path to the imported module</span>\\r\\n  <span class=\\\"token comment\\\">// under the \\\"this.resourcePath\\\" property. Get the file name</span>\\r\\n  <span class=\\\"token comment\\\">// of the imported module. For example:</span>\\r\\n  <span class=\\\"token comment\\\">// \\\"/User/admin/audio.mp3\\\" (this.resourcePath) -> \\\"audio.mp3\\\".</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> filename <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">basename</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>resourcePath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token comment\\\">// Next, create an asset info object.</span>\\r\\n  <span class=\\\"token comment\\\">// webpack uses this object when outputting the build's stats,</span>\\r\\n  <span class=\\\"token comment\\\">// so you could see info about the emitted asset.</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> assetInfo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token literal-property property\\\">sourceFilename</span><span class=\\\"token operator\\\">:</span> filename <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token comment\\\">// Finally, emit the imported audio file's \\\"source\\\"</span>\\r\\n  <span class=\\\"token comment\\\">// in the webpack's build directory using a built-in</span>\\r\\n  <span class=\\\"token comment\\\">// \\\"emitFile\\\" method.</span>\\r\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">emitFile</span><span class=\\\"token punctuation\\\">(</span>filename<span class=\\\"token punctuation\\\">,</span> source<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span> assetInfo<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token comment\\\">// For now, return the mp3 binary as-is.</span>\\r\\n  <span class=\\\"token keyword\\\">return</span> source<span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"你需要保持住 webpack 的上下文环境来获得\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">this.resourcePath</code>\"\n    }\n  }), \"和\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">this.emitFile</code>\"\n    }\n  }), \"。确保你的 laoder 不是一个箭头函数，使用箭头函数会让你无法获得 webpack 暴露给 loader 的属性和方法。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"现在音频文件会伴随着 JavaScript 包一起输出。我们继续下一个步骤：在 loader 中返回一个 React 组件。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/mp3-loader.js</span>\\r\\n<span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"path\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nmodule<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">exports</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">source</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> filename <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">basename</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>resourcePath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> assetInfo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token literal-property property\\\">sourceFilename</span><span class=\\\"token operator\\\">:</span> filename <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">emitFile</span><span class=\\\"token punctuation\\\">(</span>filename<span class=\\\"token punctuation\\\">,</span> source<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span> assetInfo<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">\\r\\nimport React from 'react'\\r\\nexport default function Player(props) {\\r\\n  return &lt;audio controls src=\\\"</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>filename<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">\\\" />\\r\\n}\\r\\n  </span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token comment\\\">// Mark the loader as raw so that the emitted audio binary</span>\\r\\n<span class=\\\"token comment\\\">// does not get processed in any way.</span>\\r\\nmodule<span class=\\\"token punctuation\\\">.</span>exports<span class=\\\"token punctuation\\\">.</span>raw <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"转换后的代码需要的依赖需要内联在生成的字符串中。loader 导入的依赖无法被编译后的代码访问到。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"loader 函数的输入输出必须是字符串。这就是为啥在字符串中声明了一个 React 组件，包含了 React 的导入语句。现在当我们导入一个 MP3 文件，导入的不再是 MP3 文件本身，而是一个 React 组件。\"), \"\\n\", React.createElement(_components.p, null, \"太棒了！你现在实现了一个将 MP3 文件转化为音频播放组件的 webpack loader。现在我们将它添加到 webpack 配置中以使其能够应用到所有的\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">*.mp3</code>\"\n    }\n  }), \"文件。\"), \"\\n\", React.createElement(_components.h2, null, \"配置自定义 loader\"), \"\\n\", React.createElement(_components.p, null, \"配置 loader 有两种方式：让 webpack 从本地文件加载或者将 loader 发布成一个常规的依赖。除非你的 loader 足够通用，或者它需要被多个项目使用，否则我强烈建议你从本地文件加载来使用 loader。\"), \"\\n\", React.createElement(_components.h3, null, \"从本地文件加载 loader\"), \"\\n\", React.createElement(_components.p, null, \"在 webpack 配置的\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">resolveLoader</code>\"\n    }\n  }), \"属性中给 loader 一个别名。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// webpack.config.js</span>\\r\\n<span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"path\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token literal-property property\\\">module</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token literal-property property\\\">rules</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\r\\n      <span class=\\\"token punctuation\\\">{</span>\\r\\n        <span class=\\\"token literal-property property\\\">test</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token regex\\\"><span class=\\\"token regex-delimiter\\\">/</span><span class=\\\"token regex-source language-regex\\\">\\\\.mp3$</span><span class=\\\"token regex-delimiter\\\">/</span></span><span class=\\\"token punctuation\\\">,</span>\\r\\n        <span class=\\\"token comment\\\">// Reference the loader by the same name</span>\\r\\n        <span class=\\\"token comment\\\">// that you aliased in \\\"resolveLoader.alias\\\" below.</span>\\r\\n        <span class=\\\"token literal-property property\\\">use</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"babel-loader\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"mp3-loader\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\r\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n  <span class=\\\"token literal-property property\\\">resolveLoader</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token literal-property property\\\">alias</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n      <span class=\\\"token string-property property\\\">\\\"mp3-loader\\\"</span><span class=\\\"token operator\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"src/mp3-loader.js\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\r\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"因为我们从 mp3-loader 中返回了 JSX，我们需要告诉 webpack 将 JSX 转化为常规的 JavaScript。这就是我们为什么需要在\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">mp3-loader</code>\"\n    }\n  }), \"之后引入\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">babel-loader</code>\"\n    }\n  }), \"。（记住 loader 是从右往左执行）。\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"安装依赖加载 loader\"), \"\\n\", React.createElement(_components.p, null, \"当你发布了一个 loader 到 NPM，你可以像使用其他的 Node.js 依赖一样来使用它。\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"loader 的默认命名规则是\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">[name]-loader</code>\"\n    }\n  }), \"。当你需要发布一个 loader 时，记得这一点。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"当你发布 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">mp3-loader</code>\"\n    }\n  }), \"到 NPM 之后，你就可以在项目中使用它了。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">npm install mp3<span class=\\\"token operator\\\">-</span>loader</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// webpack.config.js</span>\\r\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token literal-property property\\\">module</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token literal-property property\\\">rules</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\r\\n      <span class=\\\"token punctuation\\\">{</span>\\r\\n        <span class=\\\"token literal-property property\\\">test</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token regex\\\"><span class=\\\"token regex-delimiter\\\">/</span><span class=\\\"token regex-source language-regex\\\">\\\\.mp3$</span><span class=\\\"token regex-delimiter\\\">/</span></span><span class=\\\"token punctuation\\\">,</span>\\r\\n        <span class=\\\"token literal-property property\\\">use</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"babel-loader\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"mp3-loader\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\r\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"你不需要手动导入你的 loader，webpack 能够自动在\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">node_modules</code>\"\n    }\n  }), \"中找到它。\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"使用你的 loader\"), \"\\n\", React.createElement(_components.p, null, \"为了看到\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">mp3-loader</code>\"\n    }\n  }), \"的实际效果，运行\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">webpack</code>\"\n    }\n  }), \"CLI 命令来执行\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">webpack.config.js</code>\"\n    }\n  }), \"中的配置。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">$ npx webpack\\r\\nasset audio.mp3 2.38 MiB [compared for emit] [from: src/audio.mp3] (auxiliary name: main)\\r\\nasset main.js 858 KiB [compared for emit] (name: main)\\r\\nwebpack 5.37.0 compiled successfully in 1347 ms</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">mp3-loader</code>\"\n    }\n  }), \"的最终代码在这里：\", React.createElement(_components.a, {\n    href: \"https://github.com/Redd-Developer/webpack-custom-loader\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"Redd-Developer/webpack-custom-loader\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"测试你的 loader\"), \"\\n\", React.createElement(_components.p, null, \"既然 loader 依赖于编译时上下文，我推荐在 webpack 编译时进行集成测试。测试用例的期望输出取决于 loader 的实现。\"), \"\\n\", React.createElement(_components.p, null, \"对于\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">mp3-loader</code>\"\n    }\n  }), \"我们有两点期望：、\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"编译生成的资源中必须包含导入的 MP3 文件\"), \"\\n\", React.createElement(_components.li, null, \"编译生成的代码必须返回一个音频播放 React 组件\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"我们将以上两点期望反映到测试代码中：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// test/mp3-loader.test.js</span>\\r\\n<span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"path\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token keyword\\\">const</span> webpack <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"webpack\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> createFsFromVolume<span class=\\\"token punctuation\\\">,</span> Volume <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"memfs\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token comment\\\">// A custom wrapper to promisify webpack compilation.</span>\\r\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">compileAsync</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">compiler</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">resolve<span class=\\\"token punctuation\\\">,</span> reject</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    compiler<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">run</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">error<span class=\\\"token punctuation\\\">,</span> stats</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>error <span class=\\\"token operator\\\">||</span> stats<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hasErrors</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n        <span class=\\\"token keyword\\\">const</span> resolvedError <span class=\\\"token operator\\\">=</span> error <span class=\\\"token operator\\\">||</span> stats<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toJson</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"errors-only\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\r\\n        <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>resolvedError<span class=\\\"token punctuation\\\">.</span>message<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n      <span class=\\\"token punctuation\\\">}</span>\\r\\n      <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>stats<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span>\\r\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'converts \\\"*.mp3\\\" import into an audio player'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token comment\\\">// Configure a webpack compiler.</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> compiler <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">webpack</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token literal-property property\\\">mode</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"development\\\"</span><span class=\\\"token punctuation\\\">,</span>\\r\\n    <span class=\\\"token literal-property property\\\">entry</span><span class=\\\"token operator\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"../src/index.js\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\r\\n    <span class=\\\"token literal-property property\\\">output</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n      <span class=\\\"token literal-property property\\\">filename</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"index.js\\\"</span><span class=\\\"token punctuation\\\">,</span>\\r\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n    <span class=\\\"token literal-property property\\\">module</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n      <span class=\\\"token literal-property property\\\">rules</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\r\\n        <span class=\\\"token punctuation\\\">{</span>\\r\\n          <span class=\\\"token literal-property property\\\">test</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token regex\\\"><span class=\\\"token regex-delimiter\\\">/</span><span class=\\\"token regex-source language-regex\\\">\\\\.mp3$</span><span class=\\\"token regex-delimiter\\\">/</span></span><span class=\\\"token punctuation\\\">,</span>\\r\\n          <span class=\\\"token literal-property property\\\">use</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"babel-loader\\\"</span><span class=\\\"token punctuation\\\">,</span> require<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"../src/mp3-loader.js\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\r\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n        <span class=\\\"token punctuation\\\">{</span>\\r\\n          <span class=\\\"token literal-property property\\\">test</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token regex\\\"><span class=\\\"token regex-delimiter\\\">/</span><span class=\\\"token regex-source language-regex\\\">\\\\.js$</span><span class=\\\"token regex-delimiter\\\">/</span></span><span class=\\\"token punctuation\\\">,</span>\\r\\n          <span class=\\\"token literal-property property\\\">use</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"babel-loader\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\r\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n      <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\r\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token comment\\\">// Create an in-memory file system so that the build assets</span>\\r\\n  <span class=\\\"token comment\\\">// are not emitted to disk during test runs.</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> memoryFs <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createFsFromVolume</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Volume</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  compiler<span class=\\\"token punctuation\\\">.</span>outputFileSystem <span class=\\\"token operator\\\">=</span> memoryFs<span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token comment\\\">// Compile the bundle.</span>\\r\\n  <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">compileAsync</span><span class=\\\"token punctuation\\\">(</span>compiler<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token comment\\\">// Expect the imported audio file to be emitted alongside the build.</span>\\r\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>compiler<span class=\\\"token punctuation\\\">.</span>outputFileSystem<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">existsSync</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"dist/audio.mp3\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token comment\\\">// Expect the compiled code to create an \\\"audio\\\" element in React.</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> compiledCode <span class=\\\"token operator\\\">=</span> compiler<span class=\\\"token punctuation\\\">.</span>outputFileSystem<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">readFileSync</span><span class=\\\"token punctuation\\\">(</span>\\r\\n    <span class=\\\"token string\\\">\\\"dist/index.js\\\"</span><span class=\\\"token punctuation\\\">,</span>\\r\\n    <span class=\\\"token string\\\">\\\"utf8\\\"</span>\\r\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>compiledCode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toContain</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.createElement(\\\\\\\\\\\"audio\\\\\\\\\\\"'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"webpack loader 组成\"), \"\\n\", React.createElement(_components.h3, null, \"loader 选项\"), \"\\n\", React.createElement(_components.p, null, \"loader 能接收选项来改变自身的行为。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// webpack.config.js</span>\\r\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token literal-property property\\\">module</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token literal-property property\\\">rules</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\r\\n      <span class=\\\"token punctuation\\\">{</span>\\r\\n        <span class=\\\"token literal-property property\\\">test</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token regex\\\"><span class=\\\"token regex-delimiter\\\">/</span><span class=\\\"token regex-source language-regex\\\">\\\\.mp3$</span><span class=\\\"token regex-delimiter\\\">/</span></span><span class=\\\"token punctuation\\\">,</span>\\r\\n        <span class=\\\"token literal-property property\\\">use</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\r\\n          <span class=\\\"token punctuation\\\">{</span>\\r\\n            <span class=\\\"token literal-property property\\\">loader</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"mp3-loader\\\"</span><span class=\\\"token punctuation\\\">,</span>\\r\\n            <span class=\\\"token literal-property property\\\">options</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n              <span class=\\\"token literal-property property\\\">maxSizeBytes</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1000000</span><span class=\\\"token punctuation\\\">,</span>\\r\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\r\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"在上面的 webpack 配置中，我们自定义了一个\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">maxSizeBytes</code>\"\n    }\n  }), \"选项。\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">options</code>\"\n    }\n  }), \"选项可以通过\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">this.getOptions()</code>\"\n    }\n  }), \"获取到：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/mp3-loader.js</span>\\r\\nmodule<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">exports</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">source</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> options <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getOptions</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>options<span class=\\\"token punctuation\\\">.</span>maxSizeBytes<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token comment\\\">// ...parametrize your loader's behavior.</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"验证选项\"), \"\\n\", React.createElement(_components.p, null, \"验证选项是否合理是一个好的习惯，可以避免很多错误。\\r\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">schema-utils</code>\"\n    }\n  }), \"模块可以用来验证 loader 选项是否合理。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/mp3-loader.js</span>\\r\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> validate <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"schema-utils\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token comment\\\">// Describe your loader's options in a JSON Schema.</span>\\r\\n<span class=\\\"token keyword\\\">const</span> schema <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token literal-property property\\\">properties</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token literal-property property\\\">maxSizeBytes</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n      <span class=\\\"token literal-property property\\\">type</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"number\\\"</span><span class=\\\"token punctuation\\\">,</span>\\r\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\nmodule<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">exports</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">source</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> options <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getOptions</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token comment\\\">// Validate the options early in your loader.</span>\\r\\n  <span class=\\\"token function\\\">validate</span><span class=\\\"token punctuation\\\">(</span>schema<span class=\\\"token punctuation\\\">,</span> options<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token comment\\\">// ...the rest of your loader.</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">schema</code>\"\n    }\n  }), \"对象定义使用\", React.createElement(_components.a, {\n    href: \"https://json-schema.org/\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"JSON Schema\"), \"格式.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"日志\"), \"\\n\", React.createElement(_components.p, null, \"我们来考虑下\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">maxSizeBytes</code>\"\n    }\n  }), \"选项，当导入的音频文件超出了最大限制时抛出一条警告。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/mp3-loader.js</span>\\r\\n<span class=\\\"token keyword\\\">const</span> fs <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"fs\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\nmodule<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">exports</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">source</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> options <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getOptions</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> logger <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getLogger</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">const</span> assetStats <span class=\\\"token operator\\\">=</span> fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">statSync</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>resourcePath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>assetStats<span class=\\\"token punctuation\\\">.</span>size <span class=\\\"token operator\\\">></span> options<span class=\\\"token punctuation\\\">.</span>maxSizeBytes<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\r\\n    logger<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">warn</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Imported MP3 file is too large!\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token punctuation\\\">}</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"了解更多的 \", React.createElement(_components.a, {\n    href: \"https://webpack.js.org/api/logging/\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"webpack 日志接口\")), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"上下文属性\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"属性\"), React.createElement(_components.th, null, \"描述\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"this.resourcePath\"), React.createElement(_components.td, null, \"导入文件的绝对路径\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"this.rootContext\"), React.createElement(_components.td, null, \"编译\", React.createElement(_components.a, {\n    href: \"https://webpack.js.org/configuration/entry-context/#context\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"上下文环境\"))))), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"你可以打印出 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">this</code>\"\n    }\n  }), \" 来查看所有的属性\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"上下文方法\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"属性\"), React.createElement(_components.th, null, \"描述\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"this.emitFile()\"), React.createElement(_components.td, null, \"在最终的目标目录中生成一个文件\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"this.getLogger()\"), React.createElement(_components.td, null, \"获取\", React.createElement(_components.a, {\n    href: \"https://webpack.js.org/api/logging/\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"webpack 日志实例\"))), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"this.emitWarning()\"), React.createElement(_components.td, null, \"编译时生成一个警告\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"this.getOptions()\"), React.createElement(_components.td, null, \"获取 loader 选项\")))), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"你可以打印出 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">this</code>\"\n    }\n  }), \" 来查看所有的方法\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"参考文献\"), \"\\n\", React.createElement(_components.p, null, \"关于 webpack 定制化的文档并不是完善。当我在学习写 webpack loader 的时候，我参考了之前使用过的一些 loader 的实现。下面是一些你可以参考的 loader 列表：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://webpack.js.org/loaders/\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"Featured webpack loaders\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/webpack-contrib/file-loader/\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"file-loader\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/webpack-contrib/css-loader\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"css-loader\")), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"本文译自\", React.createElement(_components.a, {\n    href: \"https://redd.one/blog/writing-custom-webpack-loader\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"Writing A Custom Webpack Loader\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"D:/github/blog/blog/post-2022-12-10.mdx\";\nimport * as React from \"react\";\nimport {graphql} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/layout\";\nimport Seo from \"../../components/seo\";\nconst BlogPost = ({data, children}) => {\n  const image = getImage(data.mdx.frontmatter.hero_image);\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, children);\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","img","h2","blockquote","p","a","span","ul","li","h3","table","thead","tr","th","tbody","td","h1","_provideComponents","components","React","src","alt","href","rel","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","BlogPost","_ref","data","children","getImage","mdx","frontmatter","hero_image","Layout","pageTitle","title","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}