{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-post-2021-02-22-mdx-315a82b8acfe1bd6b698.js","mappings":"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","sources":["webpack://blog/./blog/post-2021-02-22.mdx","webpack://blog/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    img: \"img\",\n    a: \"a\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"我们时常会看到的关于 JavaScript 的一些名词：\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"单线程\"), \"：one thread == one call stack == one thing at a time\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"阻塞\"), \"：当耗时的任务（图片处理、同步的网络请求等）出现在调用栈中时即为阻塞\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"异步\"), \"：异步调用也许是解决阻塞最简单的方法\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"并发\"), \"：Event Loop 所要解决的问题。JavaScript Runtime 每次只能做一件事情，但是浏览器里不仅仅只有 JavaScript Runtime。👇\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://ethanyounglife.oss-cn-beijing.aliyuncs.com/%E6%88%AA%E5%B1%8F2021-02-20%2014.32.41.png?x-oss-process=image/resize,m_lfit,w_600\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"通过\", React.createElement(_components.a, {\n    href: \"http://latentflip.com/loupe/?code=Cgpjb25zb2xlLmxvZygnSGknKTsKCnNldFRpbWVvdXQoZnVuY3Rpb24gY2IoKSB7CiAgICBjb25zb2xlLmxvZygndGhlcmUnKTsKfSwgMzAwMCkKCmNvbnNvbGUubG9nKCdKU0NvbmYnKQ%3D%3D!!!\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"Loupe\"), \"(一种展示 JavaScript 的 Call Stack、Event Loop、Callback Queue 如何协作的可视化工具)来看一下事件循环是如何工作的\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://pic2.zhimg.com/50/v2-093b11b0b5337fc5165bcbdb3811cfd6_720w.webp?source=c8b7c179\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Event Loop 不止一个任务队列，当微任务队列和 UI 渲染再加入到这个流程中时：\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://ethanyounglife.oss-cn-beijing.aliyuncs.com/event-loop.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"再次看一段代码的执行，这次同时包含了宏任务与微任务：\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://pic3.zhimg.com/50/v2-778d214a75a2a7a0abd63b891d357b4f_720w.webp?source=c8b7c179\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.h3, null, \"总结\"), \"\\n\", React.createElement(_components.p, null, \"事件循环算法：\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"从宏任务队列出取出最老的任务执行\"), \"\\n\", React.createElement(_components.li, null, \"执行所有的微任务，直至微任务队列为空为止\"), \"\\n\", React.createElement(_components.li, null, \"必要时渲染 UI\"), \"\\n\", React.createElement(_components.li, null, \"如果宏任务队列为空，等待一个新的任务出现\"), \"\\n\", React.createElement(_components.li, null, \"执行步骤 1\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"[参考资料]\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"http://lynnelv.github.io/js-event-loop-browser\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"深入理解 js 事件循环机制（浏览器篇）\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.youtube.com/watch?v=8aGhZQkoFbQ&feature=youtu.be\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"What the heck is the event loop anyway? | Philip Roberts | JSConf EU\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.youtube.com/watch?v=cCOL7MC4Pl0\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"Jake Archibald: In The Loop - JSConf.Asia\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"D:/github/blog/blog/post-2021-02-22.mdx\";\nimport * as React from \"react\";\nimport {graphql} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/layout\";\nimport Seo from \"../../components/seo\";\nconst BlogPost = ({data, children}) => {\n  const image = getImage(data.mdx.frontmatter.hero_image);\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, children);\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","strong","img","a","h3","ol","li","_provideComponents","components","React","src","alt","href","rel","wrapper","MDXLayout","BlogPost","_ref","data","children","getImage","mdx","frontmatter","hero_image","Layout","pageTitle","title","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}