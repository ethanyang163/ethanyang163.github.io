"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[98],{6809:function(e,n,t){t.r(n),t.d(n,{Head:function(){return p},default:function(){return s}});var l=t(1151),r=t(7294);function a(e){const n=Object.assign({p:"p",strong:"strong",img:"img",a:"a",h3:"h3",ol:"ol",li:"li"},(0,l.ah)(),e.components);return r.createElement(r.Fragment,null,r.createElement(n.p,null,"我们时常会看到的关于 JavaScript 的一些名词："),"\n",r.createElement(n.p,null,r.createElement(n.strong,null,"单线程"),"：one thread == one call stack == one thing at a time"),"\n",r.createElement(n.p,null,r.createElement(n.strong,null,"阻塞"),"：当耗时的任务（图片处理、同步的网络请求等）出现在调用栈中时即为阻塞"),"\n",r.createElement(n.p,null,r.createElement(n.strong,null,"异步"),"：异步调用也许是解决阻塞最简单的方法"),"\n",r.createElement(n.p,null,r.createElement(n.strong,null,"并发"),"：Event Loop 所要解决的问题。JavaScript Runtime 每次只能做一件事情，但是浏览器里不仅仅只有 JavaScript Runtime。👇"),"\n",r.createElement(n.img,{src:"https://ethanyounglife.oss-cn-beijing.aliyuncs.com/%E6%88%AA%E5%B1%8F2021-02-20%2014.32.41.png?x-oss-process=image/resize,m_lfit,w_600",alt:""}),"\n",r.createElement(n.p,null,"通过",r.createElement(n.a,{href:"http://latentflip.com/loupe/?code=Cgpjb25zb2xlLmxvZygnSGknKTsKCnNldFRpbWVvdXQoZnVuY3Rpb24gY2IoKSB7CiAgICBjb25zb2xlLmxvZygndGhlcmUnKTsKfSwgMzAwMCkKCmNvbnNvbGUubG9nKCdKU0NvbmYnKQ%3D%3D!!!",rel:"nofollow noopener noreferrer"},"Loupe"),"(一种展示 JavaScript 的 Call Stack、Event Loop、Callback Queue 如何协作的可视化工具)来看一下事件循环是如何工作的"),"\n",r.createElement(n.img,{src:"https://pic2.zhimg.com/50/v2-093b11b0b5337fc5165bcbdb3811cfd6_720w.webp?source=c8b7c179",alt:""}),"\n",r.createElement(n.p,null,"Event Loop 不止一个任务队列，当微任务队列和 UI 渲染再加入到这个流程中时："),"\n",r.createElement(n.img,{src:"https://ethanyounglife.oss-cn-beijing.aliyuncs.com/event-loop.jpg",alt:""}),"\n",r.createElement(n.p,null,"再次看一段代码的执行，这次同时包含了宏任务与微任务："),"\n",r.createElement(n.img,{src:"https://pic3.zhimg.com/50/v2-778d214a75a2a7a0abd63b891d357b4f_720w.webp?source=c8b7c179",alt:""}),"\n",r.createElement(n.h3,null,"总结"),"\n",r.createElement(n.p,null,"事件循环算法："),"\n",r.createElement(n.ol,null,"\n",r.createElement(n.li,null,"从宏任务队列出取出最老的任务执行"),"\n",r.createElement(n.li,null,"执行所有的微任务，直至微任务队列为空为止"),"\n",r.createElement(n.li,null,"必要时渲染 UI"),"\n",r.createElement(n.li,null,"如果宏任务队列为空，等待一个新的任务出现"),"\n",r.createElement(n.li,null,"执行步骤 1"),"\n"),"\n",r.createElement(n.h3,null,"[参考资料]"),"\n",r.createElement(n.p,null,r.createElement(n.a,{href:"http://lynnelv.github.io/js-event-loop-browser",rel:"nofollow noopener noreferrer"},"深入理解 js 事件循环机制（浏览器篇）")),"\n",r.createElement(n.p,null,r.createElement(n.a,{href:"https://www.youtube.com/watch?v=8aGhZQkoFbQ&feature=youtu.be",rel:"nofollow noopener noreferrer"},"What the heck is the event loop anyway? | Philip Roberts | JSConf EU")),"\n",r.createElement(n.p,null,r.createElement(n.a,{href:"https://www.youtube.com/watch?v=cCOL7MC4Pl0",rel:"nofollow noopener noreferrer"},"Jake Archibald: In The Loop - JSConf.Asia")))}var o=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?r.createElement(n,e,r.createElement(a,e)):a(e)},c=t(8032),m=t(72),u=t(9357);const i=e=>{let{data:n,children:t}=e;(0,c.c)(n.mdx.frontmatter.hero_image);return r.createElement(m.Z,{pageTitle:n.mdx.frontmatter.title},t)},p=e=>{let{data:n}=e;return r.createElement(u.Z,{title:n.mdx.frontmatter.title})};function s(e){return r.createElement(i,e,r.createElement(o,e))}},1151:function(e,n,t){t.d(n,{ah:function(){return a}});var l=t(7294);const r=l.createContext({});function a(e){const n=l.useContext(r);return l.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}}}]);
//# sourceMappingURL=component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-post-2021-02-22-mdx-315a82b8acfe1bd6b698.js.map